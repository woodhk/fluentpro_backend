[tool.importlinter]
root_packages = ["domains", "api", "application", "infrastructure", "core"]
include_external_packages = true

[[tool.importlinter.contracts]]
name = "Domain independence"
type = "independence"
modules = [
    "domains.authentication",
    "domains.onboarding",
]

[[tool.importlinter.contracts]]
name = "Layers respect boundaries"
type = "layers"
layers = [
    "api",
    "application", 
    "domains",
    "infrastructure",
]

[[tool.importlinter.contracts]]
name = "Use cases cannot import from views"
type = "forbidden"
source_modules = [
    "domains.authentication.use_cases",
    "domains.onboarding.use_cases",
]
forbidden_modules = [
    "api",
    "domains.authentication.api",
    "domains.onboarding.api",
]

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "fluentpro-backend"
version = "0.1.0"
description = "FluentPro Backend API"
readme = "README.md"
requires-python = ">=3.10"
dependencies = []

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["venv*", "env*", "tests*"]

[tool.coverage.run]
source = ["."]
omit = [
    "venv/*",
    "env/*", 
    ".venv/*",
    "tests/*",
    "**/test_*.py",
    "**/*_test.py", 
    "**/tests.py",
    "**/migrations/*",
    "manage.py",
    "setup.py",
    "wsgi.py",
    "asgi.py",
    "**/settings/*",
    "**/__init__.py",
    "scripts/*",
    "**/vendor/*",
    "docs/*",
    "build/*",
    "dist/*",
    "*.egg-info/*",
    "Dockerfile*",
    "docker-compose*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    "if TYPE_CHECKING:",
    "\\.\\.\\."
]
show_missing = true
fail_under = 80
precision = 2

[tool.coverage.html]
directory = "htmlcov"
title = "FluentPro Backend Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"